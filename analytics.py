import json
from datetime import datetime, date
from typing import Dict, List
from aiogram import Bot, types
from aiogram.types import FSInputFile

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
analytics_data = {
    "total_users": 0,  # –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    "daily_requests": {},  # –ó–∞–ø—Ä–æ—Å—ã –ø–æ –¥–Ω—è–º
    "user_requests": {}  # –ó–∞–ø—Ä–æ—Å—ã –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
}

# –ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
ADMIN_IDS = [806697034]  # –í–∞—à ID


def log_request(user_id: int, username: str):
    """–õ–æ–≥–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    today = str(date.today())

    # –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if str(user_id) not in analytics_data["user_requests"]:
        analytics_data["total_users"] += 1

    # –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å—ã –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    if str(user_id) not in analytics_data["user_requests"]:
        analytics_data["user_requests"][str(user_id)] = {
            "username": username,
            "total_requests": 0,
            "daily_requests": {}
        }

    analytics_data["user_requests"][str(user_id)]["total_requests"] += 1

    if today not in analytics_data["user_requests"][str(user_id)]["daily_requests"]:
        analytics_data["user_requests"][str(user_id)]["daily_requests"][today] = 0
    analytics_data["user_requests"][str(user_id)]["daily_requests"][today] += 1

    # –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å—ã –ø–æ –¥–Ω—è–º
    if today not in analytics_data["daily_requests"]:
        analytics_data["daily_requests"][today] = 0
    analytics_data["daily_requests"][today] += 1


async def send_analytics(bot: Bot, chat_id: int):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."""
    if chat_id not in ADMIN_IDS:
        await bot.send_message(chat_id, "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π
    message = "üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞:\n\n"
    message += f"üë• –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {analytics_data['total_users']}\n\n"

    # –ó–∞–ø—Ä–æ—Å—ã –ø–æ –¥–Ω—è–º
    message += "üìÖ –ó–∞–ø—Ä–æ—Å—ã –ø–æ –¥–Ω—è–º:\n"
    for day, count in analytics_data["daily_requests"].items():
        message += f"{day}: {count} –∑–∞–ø—Ä–æ—Å–æ–≤\n"

    # –ó–∞–ø—Ä–æ—Å—ã –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    message += "\nüë§ –ó–∞–ø—Ä–æ—Å—ã –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º:\n"
    for user_id, data in analytics_data["user_requests"].items():
        message += f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {data['username']} (ID: {user_id}):\n"
        message += f"–í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {data['total_requests']}\n"
        message += "–ó–∞–ø—Ä–æ—Å—ã –ø–æ –¥–Ω—è–º:\n"
        for day, count in data["daily_requests"].items():
            message += f"{day}: {count} –∑–∞–ø—Ä–æ—Å–æ–≤\n"
        message += "\n"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    await bot.send_message(chat_id, message)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª user_groups.json
    file = FSInputFile("user_groups.json")
    await bot.send_document(chat_id, file, caption="–§–∞–π–ª user_groups.json")